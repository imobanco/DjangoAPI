# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.2.2
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2022-03-11T18:48:02Z"
  labels:
    app: django-pod
  name: django-pod
spec:
  containers:
  - command:
    - bash
    - -c
    - sleep 10000
    env:
    - name: DEBUG
      value: "True"
    - name: ENV
      value: dev
    - name: DB_PORT
      value: "5432"
    image: localhost/imobanco/django-api:latest
    name: service-django
    ports:
    - containerPort: 8000
      hostPort: 8000
      protocol: TCP
    - containerPort: 5432
      hostPort: 5432
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    tty: true
    volumeMounts:
    - mountPath: /home/app_user
      name: django-local-volume
    workingDir: /home/app_user
  - args:
    - postgres
    command:
    - docker-entrypoint.sh
    env:
    - name: POSTGRES_USER
      value: postgres
    - name: POSTGRES_PASSWORD
      value: postgres
    - name: POSTGRES_DB
      value: postgres
    image: docker.io/library/postgres:12.3-alpine
    name: service-postgres
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    volumeMounts:
    - mountPath: /dumps
      name: postgres-dumps-volume
    - mountPath: /var/lib/postgresql/data
      name: postgres-data-volume
    workingDir: /
  dnsConfig: {}
  restartPolicy: Never
  volumes:
  - name: postgres-data-volume
    persistentVolumeClaim:
      claimName: DjangoAPI_service-postgres_volume
  - name: django-local-volume
    hostPath:
      path: .
      type: Directory
  - hostPath:
      path: ./dumps
      type: Directory
    name: postgres-dumps-volume
status: {}

